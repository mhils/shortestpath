% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/graph-modification.R
\name{Graph Modification}
\alias{Graph Modification}
\alias{setAlphabeticalVertexNames}
\alias{setEmptyShortestPathPredecessors}
\alias{setEmptyVertexFronts}
\alias{setInfiniteMinDists}
\alias{setRandomEdgeWeights}
\alias{setSingleSource}
\alias{setUniformEdgeWeights}
\title{Graph Modification}
\usage{
setInfiniteMinDists(graph, overwrite = TRUE)

setRandomEdgeWeights(graph, dist.fun = function(n) ceiling(runif(n, 0, 10)),
  overwrite = TRUE)

setUniformEdgeWeights(graph, overwrite = TRUE)

setEmptyShortestPathPredecessors(graph, overwrite = TRUE)

setSingleSource(graph, source = FALSE)

setEmptyVertexFronts(graph, overwrite = TRUE)

setAlphabeticalVertexNames(graph, overwrite = TRUE)
}
\arguments{
\item{graph}{The original graph object. Will not be modified.}

\item{overwrite}{If \code{FALSE}, graphs with an existing attribute will not
be updated.}

\item{dist.fun}{A function that accepts the required vector length as an argument
and returns a vector of weights of the given length.}

\item{source}{The graph's source vertex for single-source algorithms.}
}
\value{
The updated graph object.
}
\description{
shortestpath provides various graph modification functions that are used internally.
}
\section{Functions}{
\itemize{
\item \code{setInfiniteMinDists}: Set the minimum distance matrix to infinity.

\item \code{setRandomEdgeWeights}: Set random edge weights.

\item \code{setUniformEdgeWeights}: Set each edge weight to 1.

\item \code{setEmptyShortestPathPredecessors}: Initialize an empty predecessor matrix.

\item \code{setSingleSource}: Truncate \code{min_dists} and
\code{shortest_path_predecessors} matrices to the selected column.

\item \code{setEmptyVertexFronts}: Initialize each vertex front as \code{NA}.

\item \code{setAlphabeticalVertexNames}: Set vertex names as A-Z. For graphs with more than
26 vertices, vertices will be numbered 1 to N.
}}
\examples{
library(igraph)

g <- random.graph.game(10, 0.5) \%>\%
  setAlphabeticalVertexNames \%>\%
  setRandomEdgeWeights()

plot(g)
E(g)$weight
}

